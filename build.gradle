
plugins {
    id 'java'
    //id 'com.google.protobuf' version '0.9.5'
}


repositories {
    mavenCentral()
}

dependencies {

    // gRPC core dependencies
    /*runtimeOnly 'io.grpc:grpc-netty-shaded:1.73.0'
    implementation 'io.grpc:grpc-protobuf:1.73.0'
    implementation 'io.grpc:grpc-stub:1.73.0'*/

    // Autres libs
    implementation 'org.java-websocket:Java-WebSocket:1.6.0'
    implementation 'org.json:json:20250107'
    implementation 'com.google.guava:guava:29.0-jre'

    // Tests
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    //implementation 'com.google.protobuf:protobuf-java:3.14'

}

test {
    useJUnitPlatform()
}

/*sourceSets {
    main {
        proto {
            srcDir 'src/main/proto'
        }
        java {
            // include self written and generated code
            srcDirs 'src/main/java', 'generated-sources/main/java'
        }
    }
    // remove the test configuration - at least in your example you don't have a special test proto file
}

protobuf {
    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.25.1'
    }

    /*generateProtoTasks.generatedFilesBaseDir = 'generated'

    generateProtoTasks {
        // all() returns the collection of all protoc tasks
        all().each { task ->
            // Here you can configure the task
        }

        // In addition to all(), you may get the task collection by various
        // criteria:

        // (Java only) returns tasks for a sourceSet
        ofSourceSet('main')

    }
}*/

